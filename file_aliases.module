<?php
/**
 * @file
 * Contains core functions for the File Aliases module.
 */

/**
 * Include additional files.
 */
foreach (module_list() as $module) {
  if (file_exists($file = dirname(__FILE__) . "/modules/{$module}.inc")) {
    require_once $file;
  }
}

/**
 * Implements hook_menu().
 */
function file_aliases_menu() {
  $items['filefield_paths/alias/%'] = array(
    'page callback' => 'file_aliases_load_fid',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_preprocess_link().
 */
function file_aliases_preprocess_link(&$variables) {
  if ($uri = file_path_to_uri($variables['path'])) {
    //dpm($uri);
  }
}

function file_path_to_uri($path) {
  foreach (array_keys(file_get_stream_wrappers()) as $scheme) {
    if (strrpos($path, file_create_url("{$scheme}://")) === 0) {
      return str_replace(file_create_url("{$scheme}://"), "{$scheme}://", $path);
    }
  }
  return FALSE;
}

/**
 * Implements hook_preprocess_image().
 */
function file_aliases_preprocess_image(&$variables) {
  if (file_uri_scheme($variables['path']) == 'http') {
    if (!preg_match('/.*?files\/styles\/(.*?)\/(.*?)\/(.*)/', $variables['path'], $matches)) {
      return;
    }
    $variables['path'] = "{$matches[2]}://{$matches[3]}";
  }

  $result = db_select('file_managed', 'f')
    ->fields('f', array('fid'))
    ->condition('uri', $variables['path'])
    ->execute()
    ->fetchAll();

  $filefield_paths_alias = "filefield_paths/alias/{$result[0]->fid}";
  if (($alias = drupal_get_path_alias($filefield_paths_alias)) != $filefield_paths_alias) {
    $variables['path'] = $alias;
  }
}

/**
 * Implements hook_node_view().
 */
//function file_aliases_entity_view($entity, $type, $view_mode, $langcode) {
//  if (($ffp = filefield_paths_get_fields($entity, $type)) == TRUE) {
//    $count = array();
//    foreach ($ffp['#files'] as &$file) {
//      if ($ffp['#settings'][$file['name']]['filealias']['display'] == TRUE) {
//      $filefield_paths_alias = "filefield_paths/alias/{$file['field']['fid']}";
//        if (($alias = drupal_get_path_alias($filefield_paths_alias)) != $filefield_paths_alias) {
//          //dpm($file);
//          //dpm($entity->{$file['name']});
//          $entity->content[$file['name']]['#items'][0]['alias'] = $alias;
//          $entity->content[$file['name']][0]['#item']['alias'] = $alias;
//          //$file['uri'] = $alias;
//          // Calculate relative path.
//    //    $path = (file_uri_scheme($file['field']['uri']) !== 'private') ? '' : '../../';
//    //      if (empty($path)) {
//    //        foreach (explode('/', file_directory_path()) as $dir) {
//    //          $path .= '../';
//    //        }
//    //      }
//    //
//    //      // Invoke file_aliases_hook_process().
//    //    if (function_exists($function = 'file_aliases_' . $file['module'] . '_process')) {
//    //        $function($node, $file, $path, $alias, $count);
//    //      }
//    //
//        }
//      }
//    }
//  }
////  dpm($entity);
//}

function file_aliases_load_fid($fid) {
  if (request_uri() == base_path() . "filefield_paths/alias/{$fid}") {
    drupal_not_found();
    exit;
  }

  $results = db_select('file_managed', 'f')
    ->fields('f', array('filemime', 'uri'))
    ->condition('fid', $fid)
    ->execute()
    ->fetchAll();
  $result = current($results);

  if (file_uri_scheme($result->uri) == 'private') {
    $file = explode('://', $result->uri);
    file_download($file[0], $file[1]);
  }

  else {
    header("Content-Type: {$result->filemime}");
    header('Cache-Control: public');
    readfile($result->uri);
  }
}

/**
 * Implements hook_file_download().
 */
function file_aliases_file_download($uri) {
  $fileinfo = pathinfo(drupal_get_path_alias($_GET['q']));
  return array(
    'Cache-Control' => 'public',
    'Content-Disposition' => "filename='{$fileinfo['basename']}'"
  );
}

//function _file_aliases_display_alias($type, $field, $refresh = FALSE) {
//  static $display = array();
//
//  if (empty($display[$type][$field])) {
//    $result = db_fetch_object(db_query(
//      "SELECT filealias FROM {filefield_paths} WHERE type = '%s' AND field = '%s'", $type, $field
//    ));
//    $data = unserialize($result->filealias);
//    $display[$type][$field] = $data['display'];
//  }
//  return $display[$type][$field];
//}

/**
 * Implements hook_views_api.
 * Notifies the Views module that we're compatible with a particular API revision.
 */
//function file_aliases_views_api() {
//  return array(
//    'api' => 2,
//    'path' => drupal_get_path('module', 'file_aliases') . '/includes',
//  );
//}
