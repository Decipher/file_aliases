<?php
// $Id$
/**
 * @file
 * Contains core functions for the File Aliases module.
 */

/**
 * Implements hook_menu().
 */
function file_aliases_menu() {
  $items['filefield_paths/alias/%'] = array(
    'page callback' => 'file_aliases_load_fid',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_init().
 */
function file_aliases_init() {
  foreach (module_list() as $module) {
    if (file_exists($file = drupal_get_path('module', 'file_aliases') . '/modules/' . $module . '.inc')) {
      require_once $file;
    }
  }
}

/**
 * Implements hook_filefield_paths_field_settings().
 */
function file_aliases_filefield_paths_field_settings() {
  return array(
    'file_alias' => array(
      'title' => 'File alias',
      'sql' => 'filealias',

      'data' => array('display' => 'file_alias_display'),

      'form' => array(
        'file_alias' => array(
          '#type' => 'textfield',
          '#title' => t('File alias'),
          '#default_value' => file_directory_path() . '/[file:ffp:onlyname:original].[file:ffp:extension:original]',
          '#maxlength' => 512,
          '#size' => 128,
        ),

        'file_alias_display' => array(
          '#type' => 'checkbox',
          '#title' => t('Display alias'),
          '#description' => t('If checked, the file alias will be displayed instead of the file') . '.',
          '#default_value' => 0,
          '#weight' => 3
        ),
      ),
    )
  );
}

/**
 * Implements hook_filefield_paths_process_file().
 */
function file_aliases_filefield_paths_process_file($new, $file, $settings, $node, $update) {
  if ($new) {
    global $user;
    $token_data = array('file' => file_load($file['field']['fid']), 'node' => $node, 'user' => $user);
    $file['filealias'] = filefield_paths_process_string($settings['filealias']['value'], $token_data, $settings['filealias']);

    $path = 'filefield_paths/alias/' . $file['field']['fid'];
    $alias = drupal_get_path_alias($path);
    if ($alias !== $path) {
      //path_save($path = array('source' => NULL, 'alias' => $alias));
    }
    path_save($path = array('source' => 'filefield_paths/alias/' . $file['field']['fid'], 'alias' => $file['filealias']));
  }
}

/**
 * Implements hook_node_view().
 */
function file_aliases_node_view(stdClass $node, $build_mode) {
  if (($ffp = filefield_paths_get_fields($node)) == TRUE) {
      $count = array();
      foreach ($ffp['#files'] as &$file) {
        if ($ffp['#settings'][$file['name']]['filealias']['display'] == TRUE) {
        $filefield_paths_alias = 'filefield_paths/alias/' . $file['field']['fid'];
          if (($alias = drupal_get_path_alias($filefield_paths_alias)) != $filefield_paths_alias) {
            // Calculate relative path.
          $path = (file_uri_scheme($file['field']['uri']) !== 'private') ? '' : '../../';
            if (empty($path)) {
              foreach (explode('/', file_directory_path()) as $dir) {
                $path .= '../';
              }
            }

            // Invoke file_aliases_hook_process().
          if (function_exists($function = 'file_aliases_' . $file['module'] . '_process')) {
              $function($node, $file, $path, $alias, $count);
            }

          }
        }
      }
  }
}

function file_aliases_load_fid($fid) {
  if (request_uri() == base_path() . 'filefield_paths/alias/' . $fid) {
    drupal_not_found();
    exit;
  }

  $results = db_query("SELECT filemime, uri FROM {file} WHERE fid = :fid", array(
    ':fid' => $fid
  ));
  foreach ($results as $result) { break; }

  if (file_uri_scheme($result->uri) == 'private') {
    $file = explode('://', $result->uri);
    file_download($file[0], $file[1]);
  }

  else {
    header('Content-Type: ' . $result->filemime);
    header('Cache-Control: public');
    readfile($result->uri);
  }
}

function file_aliases_file_download($uri) {
  $fileinfo = pathinfo(drupal_get_path_alias($_GET['q']));
  return array(
    'Cache-Control' => 'public',
    'Content-Disposition' => 'filename="' . $fileinfo['basename'] . '"'
  );
}

//function _file_aliases_display_alias($type, $field, $refresh = FALSE) {
//  static $display = array();
//
//  if (empty($display[$type][$field])) {
//    $result = db_fetch_object(db_query(
//      "SELECT filealias FROM {filefield_paths} WHERE type = '%s' AND field = '%s'", $type, $field
//    ));
//    $data = unserialize($result->filealias);
//    $display[$type][$field] = $data['display'];
//  }
//  return $display[$type][$field];
//}

/**
 * Implements hook_views_api.
 * Notifies the Views module that we're compatible with a particular API revision.
 */
//function file_aliases_views_api() {
//  return array(
//    'api' => 2,
//    'path' => drupal_get_path('module', 'file_aliases') . '/includes',
//  );
//}
